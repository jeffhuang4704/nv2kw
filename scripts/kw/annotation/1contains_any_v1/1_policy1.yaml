apiVersion: policies.kubewarden.io/v1
kind: ClusterAdmissionPolicy
metadata:
  annotations:
    io.kubewarden.policy.category: Resource validation
    io.kubewarden.policy.severity: low
  name: celtest1
spec:
  module: registry://ghcr.io/kubewarden/policies/cel-policy:latest
  settings:
    variables:
    - name: blacklist
      expression: '{"bad1": "^value1.*$", "bad2": "^value2$"}'
    - name: dataset1a
      expression: 'has(object.metadata.annotations) ? object.metadata.annotations : []'
    - name: dataset1b
      expression: 'has(object.spec.template.metadata.annotations) ? object.spec.template.metadata.annotations : []'
    - name: dataset3
      expression: 'has(object.spec.jobTemplate.metadata.annotations) ? object.spec.jobTemplate.metadata.annotations: []'
    - name: isType1
      expression: 'object.kind in ["Pod"] ? true: false'
    - name: isType2
      expression: 'object.kind in ["Deployment","ReplicaSet","DaemonSet","StatefulSet","Job"] ? true: false'
    - name: isType3
      expression: 'object.kind in ["CronJob"] ? true: false'
    validations:
      - expression: '
          !variables.isType1 ||
          (
            !variables.dataset1a.exists(key, key in variables.blacklist && variables.dataset1a[key].matches(variables.blacklist[key]))
          )
          '
        message: '❌ operator: pod contains_any, annotations cannot use any blacklist key/value'
      - expression: '
          !variables.isType2 ||
          (
            (!variables.dataset1a.exists(key, key in variables.blacklist && variables.dataset1a[key].matches(variables.blacklist[key]))) 
            &&
            (!variables.dataset1b.exists(key, key in variables.blacklist && variables.dataset1b[key].matches(variables.blacklist[key])))
          )
          '
        message: '❌ operator: deployment contains_any, annotations cannot use any blacklist key/value'
      - expression: '
        !variables.isType3 ||
        (
          (!variables.dataset1a.exists(key, key in variables.blacklist && variables.dataset1a[key].matches(variables.blacklist[key]))) 
          &&
          (!variables.dataset3.exists(key, key in variables.blacklist && variables.dataset3[key].matches(variables.blacklist[key])))
        )
        '
        message: '❌ operator: cronjob contains_any, annotations cannot use any blacklist key/value'
  rules:
    - apiGroups: ["apps"]
      apiVersions: ["v1"]
      operations: ["CREATE", "UPDATE"]
      resources: ["deployments"]
  mutating: false
  backgroundAudit: false
