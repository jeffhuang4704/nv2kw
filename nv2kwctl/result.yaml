apiVersion: policies.kubewarden.io/v1
kind: ClusterAdmissionPolicyGroup
metadata:
  name: demo
spec:
  expression: policy_envVars_containsAny() && policy_labels_containsAny() && policy_annotations_containsAny()
  message: the image is using the latest tag or is not signed by Alice and Bob
  policies:
    policy_annotations_containsAny:
      validations:
      - expression: ' !variables.isType1 || ( !variables.dataset1a.exists(key, key
          in variables.blacklist && variables.dataset1a[key].matches(variables.blacklist[key]))
          ) '
        message: '❌ operator: pod contains_any, annotations cannot use any blacklist
          key/value'
      - expression: ' !variables.isType2 || ( (!variables.dataset1a.exists(key, key
          in variables.blacklist && variables.dataset1a[key].matches(variables.blacklist[key])))
          && (!variables.dataset1b.exists(key, key in variables.blacklist && variables.dataset1b[key].matches(variables.blacklist[key])))
          ) '
        message: '❌ operator: deployment contains_any, annotations cannot use any
          blacklist key/value'
      - expression: ' !variables.isType3 || ( (!variables.dataset1a.exists(key, key
          in variables.blacklist && variables.dataset1a[key].matches(variables.blacklist[key])))
          && (!variables.dataset3.exists(key, key in variables.blacklist && variables.dataset3[key].matches(variables.blacklist[key])))
          ) '
        message: '❌ operator: cronjob contains_any, annotations cannot use any blacklist
          key/value'
      variables:
      - expression: '{"bad1": "^value1$", "bad2": "^value2.*$"}'
        name: blacklist
      - expression: 'has(object.metadata.annotations) ? object.metadata.annotations
          : []'
        name: dataset1a
      - expression: 'has(object.spec.template.metadata.annotations) ? object.spec.template.metadata.annotations
          : []'
        name: dataset1b
      - expression: 'has(object.spec.jobTemplate.metadata.annotations) ? object.spec.jobTemplate.metadata.annotations:
          []'
        name: dataset3
      - expression: 'object.kind in ["Pod"] ? true: false'
        name: isType1
      - expression: 'object.kind in ["Deployment","ReplicaSet","DaemonSet","StatefulSet","Job"]
          ? true: false'
        name: isType2
      - expression: 'object.kind in ["CronJob"] ? true: false'
        name: isType3
    policy_envVars_containsAny:
      validations:
      - expression: ' !variables.hasContainer || (!variables.containerData.exists(container,
          has(container.env) && container.env.exists(envVar, variables.blacklist.exists(check,
          check==envVar.name && envVar.value.matches(variables.blacklist[check]) )
          ))) '
        message: '❌ operator: containers contains_any, environment variables cannot
          use any blacklist key/value'
      - expression: ' !variables.hasInitContainer || (!variables.initContainerData.exists(container,
          has(container.env) && container.env.exists(envVar, variables.blacklist.exists(check,
          check==envVar.name && envVar.value.matches(variables.blacklist[check]) )
          ))) '
        message: '❌ operator: initContainers contains_any, environment variables cannot
          use any blacklist key/value'
      - expression: ' !variables.hasEphemeralContainer || (!variables.ephemeralContainerData.exists(container,
          has(container.env) && container.env.exists(envVar, variables.blacklist.exists(check,
          check==envVar.name && envVar.value.matches(variables.blacklist[check]) )
          ))) '
        message: '❌ operator: ephemeralContainers contains_any, environment variables
          cannot use any blacklist key/value'
      variables:
      - expression: '{"bad1": "^value1$", "bad2": "^value2.*$", "bad3": "^.*value3$"}'
        name: blacklist
      - expression: 'object.kind in ["Pod"] ? true: false'
        name: isType1
      - expression: 'object.kind in ["Deployment","ReplicaSet","DaemonSet","StatefulSet","Job"]
          ? true: false'
        name: isType2
      - expression: 'object.kind in ["CronJob"] ? true: false'
        name: isType3
      - expression: 'variables.isType1 ? object.spec.containers : variables.isType2
          ? object.spec.template.spec.containers : variables.isType3 ? object.spec.jobTemplate.spec.template.spec.containers
          : []'
        name: containerData
      - expression: 'variables.containerData.size() > 0 ? true : false'
        name: hasContainer
      - expression: 'variables.isType1 ? (has(object.spec.initContainers)? object.spec.initContainers
          : []) : variables.isType2 ? (has(object.spec.template.spec.initContainers)
          ? object.spec.template.spec.initContainers : []) : variables.isType3 ? (has(object.spec.jobTemplate.spec.template.spec.initContainers)
          ? object.spec.jobTemplate.spec.template.spec.initContainers: []) : []'
        name: initContainerData
      - expression: 'variables.initContainerData.size() > 0 ? true : false'
        name: hasInitContainer
      - expression: 'variables.isType1 ? (has(object.spec.ephemeralContainers)? object.spec.ephemeralContainers
          : []) : variables.isType2 ? (has(object.spec.template.spec.ephemeralContainers)
          ? object.spec.template.spec.ephemeralContainers : []) : variables.isType3
          ? (has(object.spec.jobTemplate.spec.template.spec.ephemeralContainers) ?
          object.spec.jobTemplate.spec.template.spec.ephemeralContainers: []) : []'
        name: ephemeralContainerData
      - expression: 'variables.ephemeralContainerData.size() > 0 ? true : false'
        name: hasEphemeralContainer
    policy_labels_containsAny:
      validations:
      - expression: ' !variables.isType1 || ( !variables.dataset1a.exists(key, key
          in variables.blacklist && variables.dataset1a[key].matches(variables.blacklist[key]))
          ) '
        message: '❌ operator: pod contains_any, labels cannot use any blacklist key/value'
      - expression: ' !variables.isType2 || ( (!variables.dataset1a.exists(key, key
          in variables.blacklist && variables.dataset1a[key].matches(variables.blacklist[key])))
          && (!variables.dataset1b.exists(key, key in variables.blacklist && variables.dataset1b[key].matches(variables.blacklist[key])))
          ) '
        message: '❌ operator: deployment contains_any, labels cannot use any blacklist
          key/value'
      - expression: ' !variables.isType3 || ( (!variables.dataset1a.exists(key, key
          in variables.blacklist && variables.dataset1a[key].matches(variables.blacklist[key])))
          && (!variables.dataset3.exists(key, key in variables.blacklist && variables.dataset3[key].matches(variables.blacklist[key])))
          ) '
        message: '❌ operator: cronjob contains_any, labels cannot use any blacklist
          key/value'
      variables:
      - expression: '{"bad1": "^value1.*$", "bad2": "^value2$"}'
        name: blacklist
      - expression: 'has(object.metadata.labels) ? object.metadata.labels : []'
        name: dataset1a
      - expression: 'has(object.spec.template.metadata.labels) ? object.spec.template.metadata.labels
          : []'
        name: dataset1b
      - expression: 'has(object.spec.jobTemplate.metadata.labels) ? object.spec.jobTemplate.metadata.labels:
          []'
        name: dataset3
      - expression: 'object.kind in ["Pod"] ? true: false'
        name: isType1
      - expression: 'object.kind in ["Deployment","ReplicaSet","DaemonSet","StatefulSet","Job"]
          ? true: false'
        name: isType2
      - expression: 'object.kind in ["CronJob"] ? true: false'
        name: isType3
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - pods

---
